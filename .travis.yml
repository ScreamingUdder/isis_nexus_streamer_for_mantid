# Use new trusty images, should yield newer compilers and packages
sudo: required
dist: trusty
language: cpp

matrix:
  include:
#    - compiler: clang
#      env: COMPILER=clang++-3.8
#      before_install:
#        - wget -nv -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -
#        - sudo apt-add-repository -y 'deb http://llvm.org/apt/trusty llvm-toolchain-trusty-3.8 main'
#        - sudo apt-get install -qq -y clang-3.8
#      install:
#          - if [ "$CXX" = "clang++" ]; then export CXX="clang++-3.8" CC="clang-3.8"; fi
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env: COMPILER=g++-5
      install:
          - if [ "$CXX" = "g++" ]; then export CXX="g++-5" CC="gcc-5"; fi
    - env: TEST_NAME="cppcheck"
      script:
        - cppcheck --force --quiet --inline-suppr --enable=all --suppress=missingIncludeSystem -I nexus_producer/include nexus_producer
        - cppcheck --force --quiet --inline-suppr --enable=all --suppress=missingIncludeSystem -I nexus_producer/include nexus_file_reader
        - cppcheck --force --quiet --inline-suppr --enable=all --suppress=missingIncludeSystem -I event_data/include event_data
      before_install: sudo apt-get -y install cppcheck
    - env:
        - TEST_NAME="coveralls"
        - COMPILER=g++-5
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      install:
          - if [ "$CXX" = "g++" ]; then export CXX="g++-5" CC="gcc-5"; fi
      script:
        - sudo bash travis.sh
        - mkdir build
        - cd build
        - cmake -DCMAKE_CXX_COMPILER=$COMPILER -DCMAKE_BUILD_TYPE=Debug -DCOVERALLS=ON .. && make
        - make coveralls

script:
  - sudo bash travis.sh
  - mkdir build
  - cd build
  - cmake -DCMAKE_CXX_COMPILER=$COMPILER -DCMAKE_BUILD_TYPE=Debug -DCOVERALLS=ON .. && make
  - ctest -VV
